function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _iterableToArray(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}import{observer}from"mobx-react-lite";import React from"react";import styled from"styled-components";import{useLink,useTrigger}from"../../../../../lib/context";import{isTouchscreenDevice}from"../../../../../lib/isTouchscreenDevice";import{Avatar,LineDivider,UserStatus}from"../../../atoms";import{Tooltip}from"../../../atoms/indicators/Tooltip";import{Unreads}from"../../../atoms/indicators/Unreads";import{UserTooltip}from"../../../atoms/indicators/UserTooltip";import{ItemContainer,SwooshOverlay}from"./Item";var UserItem=observer(function(a){var b=a.client,c=a.home,d=a.active,e=useLink(),f=useTrigger(),g=isTouchscreenDevice?0:_toConsumableArray(b.users.values()).filter(function(a){return"Incoming"===a.relationship}).length;return React.createElement(e,{to:c()},!d&&React.createElement(SwooshOverlay,null),React.createElement(UserTooltip,{user:b.user,div:!0,right:!0},React.createElement(f,{id:"Status"},React.createElement(Avatar,{src:b.user.generateAvatarURL({max_side:256},!1),size:42,interactive:!0,holepunch:g?"right":"bottom-right",overlay:React.createElement(React.Fragment,null,React.createElement(Unreads,{count:g,unread:0<g}),React.createElement(UserStatus,{user:b.user}))}))))}),List=styled.div.withConfig({displayName:"List",componentId:"sc-edz4mv-0"})(["gap:12px;display:flex;margin-top:8px;margin-bottom:12px;flex-direction:column;"]),ChannelInner=observer(function(a){var b,c,d=a.channel,e=a.permit,f=d.isUnread(e),g=d.getMentions(e).length;return React.createElement(Tooltip,{content:null!==(b=d.name)&&void 0!==b?b:null===(c=d.recipient)||void 0===c?void 0:c.username,div:!0,right:!0},React.createElement(Avatar,{size:42,interactive:!0,fallback:d.name,holepunch:f&&"top-right",src:d.generateIconURL({max_side:256},!1),overlay:React.createElement(Unreads,{unread:f,count:g})}))}),UnreadDMs=observer(function(a){var b=a.client,c=a.permit,d=useLink(),e=_toConsumableArray(b.channels.values()).filter(function(a){return("DirectMessage"===a.channel_type||"Group"===a.channel_type)&&a.unread});return 0===e.length?null:React.createElement(List,null,e.map(function(a){return React.createElement(d,{key:a._id,to:"/channel/".concat(a._id)},React.createElement(ChannelInner,{channel:a,permit:c}))}))});export function ListHeader(a){return React.createElement(ItemContainer,{head:!0},React.createElement(UserItem,a),React.createElement(UnreadDMs,a),React.createElement(LineDivider,{compact:!0}))}