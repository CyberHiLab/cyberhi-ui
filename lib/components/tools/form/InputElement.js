"use strict";const _excluded=["type","value","onChange"],_excluded2=["options"],_excluded3=["name","value"];Object.defineProperty(exports,"__esModule",{value:!0}),exports.InputElement=InputElement,exports.ObservedInputElement=void 0,exports.emptyValue=emptyValue;var _mobxReactLite=require("mobx-react-lite"),_react=_interopRequireDefault(require("react")),_design=require("../../design");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _extends(){return _extends=Object.assign?Object.assign.bind():function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}function emptyValue(a){return"custom"===a?void 0:"checkbox"!=a&&""}function InputElement(a){let{type:b,value:c,onChange:d}=a,e=_objectWithoutProperties(a,_excluded);const f="function"==typeof c?c():c;let g=null;switch(b){case"text":{g=_react.default.createElement(_design.InputBox,_extends({value:f,onChange:a=>d(a.currentTarget.value)},e));break}case"checkbox":{g=_react.default.createElement(_design.Checkbox,_extends({value:f,onChange:a=>d(a)},e));break}case"colour":{g=_react.default.createElement(_design.ColourSwatches,_extends({value:f,onChange:a=>d(a)},e));break}case"combo":{const a=e,{options:b}=a,c=_objectWithoutProperties(a,_excluded2);g=_react.default.createElement(_design.ComboBox,_extends({value:f,onChange:a=>d(a.currentTarget.value)},c),b.map(a=>_react.default.createElement("option",{key:a.value,value:a.value},a.name)));break}case"radio":{const{choices:a}=e;g=_react.default.createElement(_design.Column,null,a.map(a=>{let{name:b,value:c}=a,e=_objectWithoutProperties(a,_excluded3);return _react.default.createElement(_design.Radio,_extends({key:c,title:b,value:c===f,onSelect:()=>d(c)},e))}));break}case"custom":{g=e.element;break}}return e.field?_react.default.createElement("div",null,_react.default.createElement(_design.Category,null,e.field),g):g}const ObservedInputElement=(0,_mobxReactLite.observer)(InputElement);exports.ObservedInputElement=ObservedInputElement;